(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{492:function(n,a,t){"use strict";t.r(a);var e=t(2),s=Object(e.a)({},(function(){var n=this,a=n._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"synchronized关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#synchronized关键字"}},[n._v("#")]),n._v(" Synchronized关键字")]),n._v(" "),a("h3",{attrs:{id:"作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[n._v("#")]),n._v(" 作用域")]),n._v(" "),a("p",[n._v("可以修饰普通方法（锁实例对象），静态方法（锁 class 对象）和代码块（锁指定对象）。")]),n._v(" "),a("h3",{attrs:{id:"使用synchronized"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用synchronized"}},[n._v("#")]),n._v(" 使用Synchronized")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("一把锁只能被一个线程获取，其余线程等待")])]),n._v(" "),a("li",[a("p",[n._v("每个实例都对应自己的一把锁（this），不同实例之间互不影响")])]),n._v(" "),a("li",[a("p",[n._v("使用该关键字，无论执行完毕还是抛出异常都会释放锁\n代码例子：\nprivate static class BankAccount{\nString accountName;\ndouble balance;")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("  public BankAccount(String accountName,double balance){\n      this.accountName = accountName;\n      this.balance = balance;\n  }\n  //这边给出一个编程建议：当我们对共享变量进行同步时，同步代码块最好在共享变量中加\n  public synchronized double deposit(double amount){\n      balance = balance + amount;\n      return balance;\n  }\n  \n  public synchronized double  withdraw(double amount){\n      balance = balance - amount;\n      return balance;\n  }\n")])])]),a("p",[n._v("}")])])]),n._v(" "),a("h3",{attrs:{id:"原理分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理分析"}},[n._v("#")]),n._v(" 原理分析")]),n._v(" "),a("p",[n._v("该关键字是通过Monitorenter和Monitorexit指令，会让对象在执行，使其锁计数器加1或者减1。每一个对象在同一时间只与一个monitor(锁)相关联，而一个monitor在同一时间只能被一个线程获得。当锁值为 0 时代表可获得锁，获取后加 1，离开时减 1，该线程可重入.")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2023/11/22/LIPGna8SfNgDHl7.png",alt:"Clipboard_2023-11-22-20-12-37"}})]),n._v(" "),a("p",[n._v("可重入锁原理：又名递归锁，是指在同一个线程在外层方法获取锁的时候，再进入该线程的内层方法会自动获取锁（前提锁对象得是同一个对象或者class)，不会因为之前已经获取过还没释放而阻塞。将 monitor 加 1。\n可见性和有序性通过JMM 和happens-before\n一种关系可能存在的关系")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://s2.loli.net/2023/11/22/MQ2WzRIpc6PxBYq.png",alt:""}})])])}),[],!1,null,null,null);a.default=s.exports}}]);