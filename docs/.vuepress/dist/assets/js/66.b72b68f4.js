(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{503:function(t,s,a){"use strict";a.r(s);var r=a(2),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"索引结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引结构"}},[t._v("#")]),t._v(" 索引结构")]),t._v(" "),s("h3",{attrs:{id:"b-树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-树"}},[t._v("#")]),t._v(" B+树")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s2.loli.net/2023/12/08/qsYAJKP6GgpQMa8.png",alt:"img"}})]),t._v(" "),s("p",[t._v("MySQL 索引是一种数据结构，用于加快数据库查询的速度和性能。通常索引使用 B+树。")]),t._v(" "),s("p",[t._v("为何使用 B+树：")]),t._v(" "),s("p",[t._v("基于磁盘的平衡二叉树，但树非常矮，通常为 3~4 层，能存放千万到上亿的排序数据。树矮意味着访问效率高，从千万或上亿数据里查询一条数据，只用 3、4 次 I/O。")]),t._v(" "),s("p",[t._v("又因为现在的固态硬盘每秒能执行至少 10000 次 I/O ，所以查询一条数据，哪怕全部在磁盘上，也只需要 0.003 ~ 0.004 秒。另外，因为 B+ 树矮，在做排序时，也只需要比较 3~4 次就能定位数据需要插入的位置，排序效率非常不错。")]),t._v(" "),s("p",[t._v("MySQL 索引的建立对于 MySQL 的高效运行是很重要的，索引可以大大提高 MySQL 的检索速度")])])}),[],!1,null,null,null);s.default=e.exports}}]);